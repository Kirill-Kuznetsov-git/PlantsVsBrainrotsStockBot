import discord
from discord.ext import commands
import asyncio
import os
import re
from datetime import datetime
from dotenv import load_dotenv
from motor.motor_asyncio import AsyncIOMotorDatabase
import sys

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
from mongo_init import get_db

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Discord
DISCORD_TOKEN = os.getenv('DISCORD_BOT_TOKEN')
CHANNEL_ID = int(os.getenv('DISCORD_CHANNEL_ID', '1421601402425311362'))

# –í–∫–ª—é—á–∞–µ–º intents
intents = discord.Intents.default()
intents.message_content = True
intents.guilds = True
intents.messages = True

bot = commands.Bot(command_prefix="!", intents=intents)

# MongoDB collections
db: AsyncIOMotorDatabase = None
stocks_collection = None

# –ú–∞–ø–ø–∏–Ω–≥ —ç–º–æ–¥–∑–∏ –∫ –Ω–∞–∑–≤–∞–Ω–∏—è–º
SEED_EMOJIS = {
    'üåª': 'Sunflower',
    'üéÉ': 'Pumpkin',
    'üêâ': 'Dragon Fruit',
    'üçÜ': 'Eggplant',
    'üåµ': 'Cactus',
    'üçì': 'Strawberry',
    'üåΩ': 'Corn',
    'üçÖ': 'Tomato',
    'ü•ï': 'Carrot',
    'üå∂Ô∏è': 'Pepper',
    'üå∂': 'Pepper',
    'üçÑ': 'Mushroom',
    'ü•î': 'Potato',
    'üßÖ': 'Onion',
    'ü•í': 'Cucumber',
    'ü•¨': 'Lettuce',
    'ü´ë': 'Bell Pepper'
}

GEAR_KEYWORDS = ['gear', 'equipment', 'weapon', 'armor', 'tool', 'item']

def extract_timestamp_from_title(title):
    """–ò–∑–≤–ª–µ–∫–∞–µ—Ç timestamp –∏–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –≤–∏–¥–∞ 'Plants vs Brainrots Stock - <t:1759061404:t>'"""
    match = re.search(r'<t:(\d+):t>', title)
    if match:
        return int(match.group(1))
    return None

async def parse_stock_message(message):
    """–ü–∞—Ä—Å–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å—Ç–æ–∫–æ–º"""
    stock_info = {
        'discord_message_id': str(message.id),
        'timestamp': message.created_at,
        'author': message.author.name,
        'channel': message.channel.name,
        'channel_id': str(message.channel.id),
        'seed_stocks': {},
        'gear_stocks': {},
        'other_items': [],
        'raw_data': [],
        'active': True  # –ü–æ–º–µ—á–∞–µ–º –∫–∞–∫ –∞–∫—Ç–∏–≤–Ω—ã–π —Å—Ç–æ–∫
    }
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º embeds
    for embed in message.embeds:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
        if embed.title and "Plants vs Brainrots Stock" in embed.title:
            stock_info['title'] = embed.title
            
            # –ò–∑–≤–ª–µ–∫–∞–µ–º timestamp –∏–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞
            game_timestamp = extract_timestamp_from_title(embed.title)
            if game_timestamp:
                stock_info['game_timestamp'] = game_timestamp
                stock_info['game_time'] = datetime.fromtimestamp(game_timestamp)
                stock_info['id'] = f"discord_{game_timestamp}"  # –£–Ω–∏–∫–∞–ª—å–Ω—ã–π ID
            else:
                stock_info['id'] = f"discord_{message.id}"
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º embed
            stock_info['embed'] = {
                'title': embed.title,
                'description': embed.description,
                'timestamp': embed.timestamp.isoformat() if embed.timestamp else None,
                'color': embed.color.value if embed.color else None
            }
            
            # –ü–∞—Ä—Å–∏–º –ø–æ–ª—è
            plants_data = []  # –î–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å –æ—Å–Ω–æ–≤–Ω—ã–º –±–æ—Ç–æ–º
            
            for field in embed.fields:
                field_name = field.name.strip()
                field_value = field.value.strip()
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—ã—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ
                stock_info['raw_data'].append({
                    'name': field_name,
                    'value': field_value
                })
                
                # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —Å—Ç–æ–∫–∞
                is_seed = False
                is_gear = False
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ seed –ø–æ —ç–º–æ–¥–∑–∏
                for emoji, seed_name in SEED_EMOJIS.items():
                    if emoji in field_name:
                        is_seed = True
                        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
                        quantity_match = re.search(r'[+-]?\d+', field_value)
                        quantity = int(quantity_match.group()) if quantity_match else 0
                        
                        stock_info['seed_stocks'][seed_name] = {
                            'emoji': emoji,
                            'full_name': field_name,
                            'quantity': quantity,
                            'value': field_value
                        }
                        
                        # –î–æ–±–∞–≤–ª—è–µ–º –≤ plants_data –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
                        plants_data.append({
                            'name': field_name,
                            'value': field_value
                        })
                        break
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ gear
                if not is_seed:
                    for keyword in GEAR_KEYWORDS:
                        if keyword.lower() in field_name.lower() or keyword.lower() in field_value.lower():
                            is_gear = True
                            stock_info['gear_stocks'][field_name] = {
                                'name': field_name,
                                'value': field_value
                            }
                            break
                
                # –ï—Å–ª–∏ –Ω–µ seed –∏ –Ω–µ gear
                if not is_seed and not is_gear:
                    stock_info['other_items'].append({
                        'name': field_name,
                        'value': field_value
                    })
            
            # –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–∞—Å—Ç–µ–Ω–∏—è (–∫–∞–∫—Ç—É—Å—ã –∏ –∫–ª—É–±–Ω–∏–∫—É)
            plants_data.append({
                'name': 'üåµ üåµ üåµ üåµ Cactus',
                'value': '+4 stock'
            })
            plants_data.append({
                'name': 'üçì üçì üçì Strawberry',
                'value': '+3 stock'
            })
            
            stock_info['plants_data'] = plants_data
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∫ seed_stocks –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
            stock_info['seed_stocks']['Cactus'] = {
                'emoji': 'üåµ',
                'full_name': 'üåµ üåµ üåµ üåµ Cactus',
                'quantity': 4,
                'value': '+4 stock'
            }
            stock_info['seed_stocks']['Strawberry'] = {
                'emoji': 'üçì',
                'full_name': 'üçì üçì üçì Strawberry',
                'quantity': 3,
                'value': '+3 stock'
            }
    
    return stock_info

@bot.event
async def on_ready():
    global db, stocks_collection
    
    print(f"‚úÖ –ë–æ—Ç {bot.user} –æ–Ω–ª–∞–π–Ω!")
    print(f"üìç –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∫–∞–Ω–∞–ª–∞ ID: {CHANNEL_ID}")
    
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ MongoDB
    db = get_db()
    stocks_collection = db.stock
    
    # –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã
    await stocks_collection.create_index('discord_message_id', unique=True, sparse=True)
    await stocks_collection.create_index('game_timestamp', sparse=True)
    await stocks_collection.create_index('active')
    await stocks_collection.create_index([('timestamp', -1)])
    
    print("‚úÖ MongoDB –ø–æ–¥–∫–ª—é—á–µ–Ω–∞")
    print("=" * 60)
    print("üîç –û–∂–∏–¥–∞—é —Å–æ–æ–±—â–µ–Ω–∏—è —Å 'Plants vs Brainrots Stock' –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ...")
    print("-" * 60)
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    total_stocks = await stocks_collection.count_documents({'source': 'discord'})
    print(f"üìÇ –í –±–∞–∑–µ {total_stocks} —Å—Ç–æ–∫–æ–≤ –∏–∑ Discord")

@bot.event
async def on_message(message):
    if message.author == bot.user:
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–Ω–∞–ª
    if message.channel.id != CHANNEL_ID:
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ embeds —Å –Ω—É–∂–Ω—ã–º –∑–∞–≥–æ–ª–æ–≤–∫–æ–º
    has_stock_embed = False
    for embed in message.embeds:
        if embed.title and "Plants vs Brainrots Stock" in embed.title:
            has_stock_embed = True
            break
    
    if not has_stock_embed:
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ –ª–∏ —É–∂–µ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
    existing = await stocks_collection.find_one({'discord_message_id': str(message.id)})
    if existing:
        print(f"‚è≠Ô∏è –°–æ–æ–±—â–µ–Ω–∏–µ {message.id} —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ")
        return
    
    # –ü–∞—Ä—Å–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    print(f"\nüÜï –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å—Ç–æ–∫–æ–º!")
    print("message", message, type(message))
    stock_info = await parse_stock_message(message)
    
    # –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    print(f"üìÖ –í—Ä–µ–º—è: {stock_info['timestamp']}")
    print(f"üë§ –ê–≤—Ç–æ—Ä: {stock_info['author']}")
    
    if 'game_timestamp' in stock_info:
        print(f"üéÆ –ò–≥—Ä–æ–≤–æ–µ –≤—Ä–µ–º—è: {stock_info['game_time']}")
        print(f"üÜî ID –∏–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞: {stock_info['game_timestamp']}")
    
    # Seed —Å—Ç–æ–∫–∏
    if stock_info['seed_stocks']:
        print(f"\nüå± SEED –°–¢–û–ö–ò ({len(stock_info['seed_stocks'])}):")
        for seed, data in stock_info['seed_stocks'].items():
            print(f"   {data['emoji']} {seed}: {data['value']}")
    
    # Gear —Å—Ç–æ–∫–∏
    if stock_info['gear_stocks']:
        print(f"\n‚öôÔ∏è GEAR –°–¢–û–ö–ò ({len(stock_info['gear_stocks'])}):")
        for gear, data in stock_info['gear_stocks'].items():
            print(f"   ‚Ä¢ {data['name']}: {data['value']}")
    
    # –î—Ä—É–≥–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã
    if stock_info['other_items']:
        print(f"\nüì¶ –î–†–£–ì–ò–ï –ü–†–ï–î–ú–ï–¢–´ ({len(stock_info['other_items'])}):")
        for item in stock_info['other_items']:
            print(f"   ‚Ä¢ {item['name']}: {item['value']}")
    
    # –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º —Å—Ç–∞—Ä—ã–µ –∞–∫—Ç–∏–≤–Ω—ã–µ —Å—Ç–æ–∫–∏
    await stocks_collection.update_many(
        {'active': True},
        {'$set': {'active': False}}
    )
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ MongoDB
    try:
        result = await stocks_collection.insert_one(stock_info)
        print(f"\nüíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ MongoDB —Å ID: {result.inserted_id}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: {e}")
    
    print("-" * 60)
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã
    await bot.process_commands(message)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    if not DISCORD_TOKEN:
        print("‚ùå –û—à–∏–±–∫–∞: DISCORD_BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
    else:
        print("üöÄ –ó–∞–ø—É—Å–∫–∞—é Plants vs Brainrots Stock Monitor (MongoDB)...")
        bot.run(DISCORD_TOKEN)
